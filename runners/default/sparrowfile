my $user = config()<user>;

my $rakudo-version = config()<rakudo_version>;

my $directory = $*CWD;

my $zef-debug = False; # could be overiden in custom sparrowfile

# Alpine patch

if os() eq 'alpine' {

  # this is needed for alpine rakudo installation
  unless "/bin/zef".IO ~~ :e {
    copy "/opt/rakudo-pkg/share/perl6/core/bin/zef", "/bin/zef"
  }

  # this is needed for alpine rakudo installation
  unless "/bin/perl6".IO ~~ :e {
    copy "/opt/rakudo-pkg/bin/perl6", "/bin/perl6"
  }

}

# ------------------------------------------- INSTALL Rakudo -------------------------------------------------------- #

say "<<< PREPARE Environment >>>";

if "/home/$user/rakuplay.ok" {

	say "rakuplay environment already set";


} else {

	user $user;

	module-run 'Rakudo::Install', %(
	  user => $user,
	  rakudo-version => $rakudo-version,
	  skip-install-dependencies => True
	);

	bash Q|sed -i '2 i\($*OUT,$*ERR).map: {.out-buffer = 0}' $(which zef); echo $(which zef); cat $(which zef)|, %(
	  description => "zef patch for user $user",
	  user => $user
	);

	spurt "/home/$user/rakuplay.ok", ""; # we use file to notify that rakuplay env is set, so don't set it next time
}

# ------------------------------------------- INSTALL Modules -------------------------------------------------------- #

if "files/Rakufile".IO ~~ :f {
  say "*** install Raku modules from Rakufile file ***";
  # install Raku modules from Rakufile file
  for "files/Rakufile".IO.lines -> $line {
    next if $line ~~ /^^ \s* '#' /;
    next unless $line ~~ /\S/;
    my @params = $line.split(/\s+/);
    my $module = @params.shift;
    my $zef-options = $zef-debug ?? "--debug" !! "";
    $zef-options ~=  " {@params}" if @params;
    bash "zef install $module $zef-options", %(
      description => "zef install $module $zef-options",
      user => $user,
      debug => False
    )
  }
}

if "files/code.raku".IO ~~ :e {
  say "executing code:";
  say "=============================";
  say "files/code.raku".IO.slurp;
  EVALFILE "files/code.raku";
} else {
  say "no code passed, exiting ...";
}

say "===";
say "RakuPlay: OK";


